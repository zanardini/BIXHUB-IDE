/* 
 * OnBoarding
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// ConfigurationToExpose
    /// </summary>
    [DataContract]
        public partial class ConfigurationToExpose :  IEquatable<ConfigurationToExpose>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ConfigurationToExpose" /> class.
        /// </summary>
        /// <param name="riskMediumTreshold">riskMediumTreshold.</param>
        /// <param name="riskHighTreshold">riskHighTreshold.</param>
        public ConfigurationToExpose(int? riskMediumTreshold = default(int?), int? riskHighTreshold = default(int?))
        {
            this.RiskMediumTreshold = riskMediumTreshold;
            this.RiskHighTreshold = riskHighTreshold;
        }
        
        /// <summary>
        /// Gets or Sets RiskMediumTreshold
        /// </summary>
        [DataMember(Name="risk_MediumTreshold", EmitDefaultValue=false)]
        public int? RiskMediumTreshold { get; set; }

        /// <summary>
        /// Gets or Sets RiskHighTreshold
        /// </summary>
        [DataMember(Name="risk_HighTreshold", EmitDefaultValue=false)]
        public int? RiskHighTreshold { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ConfigurationToExpose {\n");
            sb.Append("  RiskMediumTreshold: ").Append(RiskMediumTreshold).Append("\n");
            sb.Append("  RiskHighTreshold: ").Append(RiskHighTreshold).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ConfigurationToExpose);
        }

        /// <summary>
        /// Returns true if ConfigurationToExpose instances are equal
        /// </summary>
        /// <param name="input">Instance of ConfigurationToExpose to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ConfigurationToExpose input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.RiskMediumTreshold == input.RiskMediumTreshold ||
                    (this.RiskMediumTreshold != null &&
                    this.RiskMediumTreshold.Equals(input.RiskMediumTreshold))
                ) && 
                (
                    this.RiskHighTreshold == input.RiskHighTreshold ||
                    (this.RiskHighTreshold != null &&
                    this.RiskHighTreshold.Equals(input.RiskHighTreshold))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.RiskMediumTreshold != null)
                    hashCode = hashCode * 59 + this.RiskMediumTreshold.GetHashCode();
                if (this.RiskHighTreshold != null)
                    hashCode = hashCode * 59 + this.RiskHighTreshold.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
