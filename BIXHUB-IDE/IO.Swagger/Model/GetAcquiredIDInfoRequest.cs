/* 
 * OnBoarding
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// GetAcquiredIDInfoRequest
    /// </summary>
    [DataContract]
        public partial class GetAcquiredIDInfoRequest :  IEquatable<GetAcquiredIDInfoRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetAcquiredIDInfoRequest" /> class.
        /// </summary>
        /// <param name="withPersonalData">withPersonalData.</param>
        /// <param name="withIDCard">withIDCard.</param>
        /// <param name="withSelfie">withSelfie.</param>
        /// <param name="withLivenessDetection">withLivenessDetection.</param>
        /// <param name="withDigitalIdentityReqResp">withDigitalIdentityReqResp.</param>
        public GetAcquiredIDInfoRequest(bool? withPersonalData = default(bool?), bool? withIDCard = default(bool?), bool? withSelfie = default(bool?), bool? withLivenessDetection = default(bool?), bool? withDigitalIdentityReqResp = default(bool?))
        {
            this.WithPersonalData = withPersonalData;
            this.WithIDCard = withIDCard;
            this.WithSelfie = withSelfie;
            this.WithLivenessDetection = withLivenessDetection;
            this.WithDigitalIdentityReqResp = withDigitalIdentityReqResp;
        }
        
        /// <summary>
        /// Gets or Sets WithPersonalData
        /// </summary>
        [DataMember(Name="withPersonalData", EmitDefaultValue=false)]
        public bool? WithPersonalData { get; set; }

        /// <summary>
        /// Gets or Sets WithIDCard
        /// </summary>
        [DataMember(Name="withIDCard", EmitDefaultValue=false)]
        public bool? WithIDCard { get; set; }

        /// <summary>
        /// Gets or Sets WithSelfie
        /// </summary>
        [DataMember(Name="withSelfie", EmitDefaultValue=false)]
        public bool? WithSelfie { get; set; }

        /// <summary>
        /// Gets or Sets WithLivenessDetection
        /// </summary>
        [DataMember(Name="withLivenessDetection", EmitDefaultValue=false)]
        public bool? WithLivenessDetection { get; set; }

        /// <summary>
        /// Gets or Sets WithDigitalIdentityReqResp
        /// </summary>
        [DataMember(Name="withDigitalIdentityReqResp", EmitDefaultValue=false)]
        public bool? WithDigitalIdentityReqResp { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class GetAcquiredIDInfoRequest {\n");
            sb.Append("  WithPersonalData: ").Append(WithPersonalData).Append("\n");
            sb.Append("  WithIDCard: ").Append(WithIDCard).Append("\n");
            sb.Append("  WithSelfie: ").Append(WithSelfie).Append("\n");
            sb.Append("  WithLivenessDetection: ").Append(WithLivenessDetection).Append("\n");
            sb.Append("  WithDigitalIdentityReqResp: ").Append(WithDigitalIdentityReqResp).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetAcquiredIDInfoRequest);
        }

        /// <summary>
        /// Returns true if GetAcquiredIDInfoRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GetAcquiredIDInfoRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetAcquiredIDInfoRequest input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.WithPersonalData == input.WithPersonalData ||
                    (this.WithPersonalData != null &&
                    this.WithPersonalData.Equals(input.WithPersonalData))
                ) && 
                (
                    this.WithIDCard == input.WithIDCard ||
                    (this.WithIDCard != null &&
                    this.WithIDCard.Equals(input.WithIDCard))
                ) && 
                (
                    this.WithSelfie == input.WithSelfie ||
                    (this.WithSelfie != null &&
                    this.WithSelfie.Equals(input.WithSelfie))
                ) && 
                (
                    this.WithLivenessDetection == input.WithLivenessDetection ||
                    (this.WithLivenessDetection != null &&
                    this.WithLivenessDetection.Equals(input.WithLivenessDetection))
                ) && 
                (
                    this.WithDigitalIdentityReqResp == input.WithDigitalIdentityReqResp ||
                    (this.WithDigitalIdentityReqResp != null &&
                    this.WithDigitalIdentityReqResp.Equals(input.WithDigitalIdentityReqResp))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.WithPersonalData != null)
                    hashCode = hashCode * 59 + this.WithPersonalData.GetHashCode();
                if (this.WithIDCard != null)
                    hashCode = hashCode * 59 + this.WithIDCard.GetHashCode();
                if (this.WithSelfie != null)
                    hashCode = hashCode * 59 + this.WithSelfie.GetHashCode();
                if (this.WithLivenessDetection != null)
                    hashCode = hashCode * 59 + this.WithLivenessDetection.GetHashCode();
                if (this.WithDigitalIdentityReqResp != null)
                    hashCode = hashCode * 59 + this.WithDigitalIdentityReqResp.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
